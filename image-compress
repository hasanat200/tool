<!DOCTYPE html>
<html lang="en" itemscope itemtype="http://schema.org/WebApplication">
<head>
    <!-- SEO Meta Tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Online Image Compressor - Optimize your images for web with adjustable compression levels. Reduce file size while maintaining quality.">
    <meta name="keywords" content="image compressor, optimize images, reduce image size, web optimization">
    <meta property="og:title" content="Web Image Optimizer">
    <meta property="og:description" content="Free online image compression tool with adjustable quality settings">
    
    <!-- Structured Data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "WebApplication",
        "name": "Image Compressor Pro",
        "description": "Online image optimization tool with adjustable compression settings",
        "applicationCategory": "Multimedia",
        "operatingSystem": "Web",
        "offers": {
            "@type": "Offer",
            "price": "0",
            "priceCurrency": "USD"
        }
    }
    </script>
    
    <title>Image Compressor Pro | Web Optimization Tool</title>
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    
    <style>
        /* Modern Design System */
        :root {
            --primary: #6366f1;
            --secondary: #4f46e5;
            --accent: #8b5cf6;
            --background: #f8fafc;
            --text: #1e293b;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            min-height: 100vh;
            color: var(--text);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header Styles */
        .header {
            text-align: center;
            padding: 2rem 0;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            background: linear-gradient(45deg, var(--secondary), var(--accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        /* File Upload Styling */
        .file-upload {
            text-align: center;
            margin: 2rem 0;
            position: relative;
        }

        .file-upload input[type="file"] {
            opacity: 0;
            position: absolute;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .upload-btn {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            padding: 1.5rem 3rem;
            border-radius: 50px;
            font-size: 1.1rem;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: transform 0.3s ease;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .upload-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }

        /* Compression Controls */
        .controls {
            background: white;
            padding: 2rem;
            border-radius: 20px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            margin: 2rem 0;
        }

        .quality-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            border-radius: 4px;
            background: #e2e8f0;
            outline: none;
            margin: 1.5rem 0;
        }

        .quality-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 24px;
            height: 24px;
            background: var(--primary);
            border-radius: 50%;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .quality-display {
            font-size: 2rem;
            font-weight: 600;
            color: var(--secondary);
            text-align: center;
            margin-bottom: 1rem;
        }

        /* Image Preview Section */
        .preview-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin: 3rem 0;
        }

        .preview-card {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
            min-height: 200px;
        }

        .preview-card:hover {
            transform: translateY(-5px);
        }

        .preview-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary), var(--accent));
        }

        canvas {
            max-width: 100%;
            height: auto;
            border-radius: 12px;
        }

        /* Stats Display */
        .stats {
            display: flex;
            justify-content: space-between;
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            margin: 2rem 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .stat-item {
            text-align: center;
        }

        .stat-label {
            color: #64748b;
            font-size: 0.9rem;
        }

        .stat-value {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--text);
        }

        /* Download Button */
        .download-btn {
            background: linear-gradient(45deg, #10b981, #059669);
            color: white;
            padding: 1rem 2rem;
            border-radius: 50px;
            font-size: 1.1rem;
            display: block;
            width: 100%;
            max-width: 300px;
            margin: 2rem auto;
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
            border: none;
            cursor: pointer;
        }

        .download-btn::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, 
                transparent, 
                rgba(255,255,255,0.2), 
                transparent);
            transform: rotate(45deg);
            transition: all 0.5s ease;
        }

        .download-btn:hover::after {
            left: 50%;
        }

        /* Ad Sections */
        .ad-section {
            background: white;
            border-radius: 20px;
            padding: 1rem;
            margin: 2rem 0;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            text-align: center;
        }

        /* Loading Animation */
        .loading-spinner {
            display: none;
            width: 40px;
            height: 40px;
            border: 4px solid #f1f5f9;
            border-top: 4px solid var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 2rem auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .container {
                padding: 15px;
            }
        }

        @media (max-width: 992px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .upload-btn {
                padding: 1.2rem 2rem;
                font-size: 1rem;
            }
        }

        @media (max-width: 768px) {
            .preview-container {
                grid-template-columns: 1fr;
                gap: 1rem;
                margin: 2rem 0;
            }

            .preview-card {
                padding: 1rem;
            }

            .controls {
                padding: 1.5rem;
            }

            .quality-display {
                font-size: 1.5rem;
            }

            .stats {
                padding: 1rem;
                flex-direction: column;
                gap: 1rem;
            }
        }

        @media (max-width: 576px) {
            .header h1 {
                font-size: 1.75rem;
            }

            .upload-btn {
                width: 100%;
                justify-content: center;
                padding: 1rem;
            }

            .file-upload {
                margin: 1.5rem 0;
            }

            .quality-slider::-webkit-slider-thumb {
                width: 20px;
                height: 20px;
            }

            .download-btn {
                max-width: 100%;
                margin: 1rem auto;
                padding: 0.8rem 1rem;
                font-size: 1rem;
            }

            canvas {
                max-width: 90%;
            }

            .preview-card h3 {
                font-size: 1rem;
            }

            .stat-value {
                font-size: 1rem;
            }

            .stat-label {
                font-size: 0.8rem;
            }
        }

        @media (max-width: 480px) {
            .header h1 {
                font-size: 1.5rem;
            }

            .header p {
                font-size: 0.9rem;
            }

            .quality-display {
                font-size: 1.2rem;
            }

            .quality-slider {
                margin: 1rem 0;
            }

            .preview-container {
                margin: 1.5rem 0;
            }
        }

        /* Touch optimization */
        button,
        input[type="range"] {
            touch-action: manipulation;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header Ad -->
        <div class="ad-section">
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-[AD_UNIT_ID_HEADER]"
                 data-ad-slot="728x90"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
        </div>

        <header class="header">
            <h1>Image Compressor Pro</h1>
            <p>Optimize your images with stunning quality</p>
        </header>

        <div class="file-upload">
            <input type="file" id="imageInput" accept="image/*">
            <label for="imageInput" class="upload-btn">
                📁 Upload Image
            </label>
        </div>

        <div class="controls">
            <div class="quality-display">
                <span id="levelValue">80</span>% Quality
            </div>
            <input type="range" class="quality-slider" id="compressionLevel" 
                   min="1" max="100" value="80">
        </div>

        <div class="preview-container">
            <div class="preview-card">
                <h3>Original Image</h3>
                <canvas id="originalPreview"></canvas>
            </div>
            <div class="preview-card">
                <h3>Compressed Image</h3>
                <canvas id="compressedPreview"></canvas>
            </div>
        </div>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-label">Original Size</div>
                <div class="stat-value" id="originalSize">0 KB</div>
            </div>
            <div class="stat-item">
                <div class="stat-label">Compressed Size</div>
                <div class="stat-value" id="compressedSize">0 KB</div>
            </div>
        </div>

        <div class="loading-spinner"></div>

        <button class="download-btn" id="downloadBtn" disabled>
            ⬇ Download Compressed Image
        </button>

        <!-- Footer Ad -->
        <div class="ad-section">
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-[AD_UNIT_ID_FOOTER]"
                 data-ad-slot="728x90"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
        </div>
    </div>

    <script>
        // AdSense initialization
        (adsbygoogle = window.adsbygoogle || []).push({});

        const imageInput = document.getElementById('imageInput');
        const compressionLevel = document.getElementById('compressionLevel');
        const levelValue = document.getElementById('levelValue');
        const downloadBtn = document.getElementById('downloadBtn');
        const originalPreview = document.getElementById('originalPreview');
        const compressedPreview = document.getElementById('compressedPreview');
        const originalSizeSpan = document.getElementById('originalSize');
        const compressedSizeSpan = document.getElementById('compressedSize');
        const spinner = document.querySelector('.loading-spinner');

        let currentCompressedBlob = null;

        // Initialize slider color
        compressionLevel.addEventListener('input', (e) => {
            const value = e.target.value;
            levelValue.textContent = value;
            compressionLevel.style.background = `linear-gradient(90deg, 
                var(--primary) ${value}%, 
                #e2e8f0 ${value}%)`;
            if (imageInput.files[0]) compressImage(imageInput.files[0]);
        });

        imageInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (!file?.type.startsWith('image/')) {
                alert('Please select an image file');
                return;
            }
            compressImage(file);
        });

        downloadBtn.addEventListener('click', () => {
            if (!currentCompressedBlob) return;
            const url = URL.createObjectURL(currentCompressedBlob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `compressed_${imageInput.files[0].name}`;
            document.body.appendChild(a);
            a.click();
            URL.revokeObjectURL(url);
        });

        async function compressImage(file) {
            try {
                spinner.style.display = 'block';
                downloadBtn.disabled = true;
                
                const img = await createImageBitmap(file);
                const originalCtx = originalPreview.getContext('2d');
                
                // Calculate scaling for responsive display
                const maxWidth = Math.min(img.width, window.innerWidth * 0.8);
                const scale = maxWidth / img.width;
                
                [originalPreview, compressedPreview].forEach(canvas => {
                    canvas.width = img.width * scale;
                    canvas.height = img.height * scale;
                });

                // Draw scaled images
                originalCtx.drawImage(img, 0, 0, img.width * scale, img.height * scale);

                // Compression logic
                const quality = compressionLevel.value / 100;
                compressedPreview.toBlob((blob) => {
                    currentCompressedBlob = blob;
                    compressedPreview.getContext('2d').drawImage(img, 0, 0, img.width * scale, img.height * scale);
                    updateSizeStats(file.size, blob.size);
                    downloadBtn.disabled = false;
                    spinner.style.display = 'none';
                }, 'image/jpeg', quality);
            } catch (error) {
                console.error('Compression error:', error);
                spinner.style.display = 'none';
                downloadBtn.disabled = true;
            }
        }

        function updateSizeStats(original, compressed) {
            originalSizeSpan.textContent = `${(original/1024).toFixed(2)} KB`;
            compressedSizeSpan.textContent = `${(compressed/1024).toFixed(2)} KB`;
        }

        // Handle window resize
        window.addEventListener('resize', () => {
            if (imageInput.files[0]) {
                compressImage(imageInput.files[0]);
            }
        });

        // Trigger initial slider update
        compressionLevel.dispatchEvent(new Event('input'));
    </script>
</body>
</html>
